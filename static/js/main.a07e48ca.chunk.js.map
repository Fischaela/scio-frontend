{"version":3,"sources":["serviceWorker.js","reducers/BookmarksReducer.js","reducers/types.js","config.js","reducers/SessionReducer.js","reducer.js","actions/BookmarksActions.js","actions/types.js","actions/SessionActions.js","components/BookmarkCard.js","components/BookmarkForm.js","containers/App.js","components/Login.js","containers/Home.js","index.js"],"names":["Boolean","window","location","hostname","match","defaultStore","bookmarks","bookmarksState","newBookmarkState","getTags","state","tags","Bookmarks","bookmark","tag","push","Set","reducer","store","action","type","payload","API_URL","localStorage","getItem","setItem","scioApp","combineReducers","Session","getBookmarks","dispatch","fetch","credentials","method","then","response","json","console","log","getBookmarksSuccess","catch","error","sessionError","Paragraph","BookmarkCard","onClick","e","props","handleClick","data","className","hoverable","cover","alt","style","this","screenshot_id","backgroundImage","title","description","copyable","url","map","color","key","Component","BookmarkForm","layout","Item","label","onChange","handleChange","value","mode","placeholder","selectedItems","handleTagChange","width","filteredOptions","item","Option","Header","Content","Footer","App","handleCancel","setState","modalVisible","handleOk","preventDefault","confirmLoading","addBookmark","newBookmarkDescription","newBookmarkTitle","newBookmarkUrl","setTimeout","showModal","selectedTags","handleNewBookmarkChange","bind","open","event","target","filter","o","includes","onCancel","onOk","visible","logout","card","handleBookmarkClick","id","href","Text","Title","Login","handleToggleRegister","showRegister","email","password","passwordCheck","username","handleSubmitLogin","handleSubmitRegister","login","register","level","prefix","Password","Home","componentDidMount","sessionState","handleLogin","handleRegister","handleLogout","defaultProps","undefined","connect","body","JSON","stringify","headers","emailAddress","registerSuccess","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","thunk","wasRedirected","initialiseSession","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a07e48ca.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {\n  CREATE_BOOKMARK_ERROR,\n  CREATE_BOOKMARK_IN_PROGRESS,\n  CREATE_BOOKMARK_SUCCESS,\n  GETTING_BOOKMARKS_ERROR,\n  GETTING_BOOKMARKS_IN_PROGRESS,\n  GETTING_BOOKMARKS_SUCCESS,\n} from './types'\n\nconst defaultStore = {\n  bookmarks: null,\n  bookmarksState: 'UNDEFINED',\n  newBookmarkState: 'UNDEFINED',\n}\n\nconst reducer = (store = defaultStore, action) => {\n  switch (action.type) {\n  case 'CREATE_BOOKMARK_REQUEST':\n    return { ...store, newBookmarkState: CREATE_BOOKMARK_IN_PROGRESS }\n  case 'CREATE_BOOKMARK_SUCCESS':\n    return { ...store, newBookmarkState: CREATE_BOOKMARK_SUCCESS }\n  case 'CREATE_BOOKMARK_ERROR':\n    return { ...store, newBookmarkState: CREATE_BOOKMARK_ERROR }\n  case 'GET_BOOKMARKS_REQUEST':\n    return { ...store, bookmarksState: GETTING_BOOKMARKS_IN_PROGRESS }\n  case 'GET_BOOKMARKS_SUCCESS':\n    return { ...store, bookmarksState: GETTING_BOOKMARKS_SUCCESS, bookmarks: action.payload }\n  case 'GET_BOOKMARKS_ERROR':\n    return { ...store, bookmarksState: GETTING_BOOKMARKS_ERROR }\n  default:\n    return { ...store }\n  }\n}\n\n// Selector functions\nexport const getTags = (state) => {\n  let tags = []\n  if (state.Bookmarks && state.Bookmarks.bookmarks) {\n    for (const bookmark of state.Bookmarks.bookmarks) {\n      for (const tag of bookmark.tags) {\n        tags.push(tag)\n      }\n    }\n    tags = [...new Set(tags)]\n  }\n  return(tags)\n}\n\nexport default reducer","// Session States\nexport const FORGOT_PASSWORD = 'FORGOT_PASSWORD'\nexport const FORGOT_PASSWORD_IN_PROGRESS = 'FORGOT_PASSWORD_IN_PROGRESS'\nexport const FORGOT_PASSWORD_SUCCESS = 'FORGOT_PASSWORD_SUCCESS'\nexport const INVALID = 'INVALID'\nexport const LOGIN_IN_PROGRESS = 'LOGIN_IN_PROGRESS'\nexport const LOGGED_IN = 'LOGGED_IN'\nexport const LOGGED_OUT = 'LOGGED_OUT'\nexport const REGISTRATION_IN_PROGRESS = 'REGISTRATION_IN_PROGRESS'\nexport const REGISTER_SUCCESS = 'REGISTER_SUCCESS'\nexport const UNKNOWN = 'UNKNOWN'\n\n// Bookmarks States\nexport const CREATE_BOOKMARK_ERROR = 'CREATE_BOOKMARK_ERROR'\nexport const CREATE_BOOKMARK_IN_PROGRESS = 'CREATE_BOOKMARK_IN_PROGRESS'\nexport const CREATE_BOOKMARK_SUCCESS = 'CREATE_BOOKMARK_SUCCESS'\nexport const GETTING_BOOKMARKS_ERROR = 'GETTING_BOOKMARKS_ERROR'\nexport const GETTING_BOOKMARKS_IN_PROGRESS = 'GETTING_BOOKMARKS_IN_PROGRESS'\nexport const GETTING_BOOKMARKS_SUCCESS = 'GETTING_BOOKMARKS_SUCCESS'\n","export const API_URL = `https://shortcut.io`\nexport const SCIO_LOCALSTORAGE_ID = `SCIO`","import {\n  INVALID,\n  LOGGED_IN,\n  LOGIN_IN_PROGRESS,\n  LOGGED_OUT,\n  REGISTRATION_IN_PROGRESS,\n  REGISTER_SUCCESS,\n  UNKNOWN,\n} from './types'\n\nimport {\n  SCIO_LOCALSTORAGE_ID,\n} from '../config'\n\nconst defaultStore = {\n  state: UNKNOWN,\n}\n\nconst reducer = (store = defaultStore, action) => {\n  switch (action.type) {\n  case 'INITIALISE_SESSION':\n    let state = UNKNOWN\n    if (localStorage.getItem(SCIO_LOCALSTORAGE_ID) === 'LOGGED_IN') {\n      state = LOGGED_IN\n    }\n    return {...store, state: state}\n  case 'LOGIN_SUCCESS':\n    return {...store, state: LOGGED_IN}\n  case 'LOGIN_REQUEST':\n    return {...store, state: LOGIN_IN_PROGRESS}\n  case 'LOGOUT_SUCCESS':\n    localStorage.setItem(SCIO_LOCALSTORAGE_ID, 'LOGGED_OUT')\n    return {...store, state: LOGGED_OUT}\n  case 'REGISTER_SUCCESS':\n    return {...store, state: REGISTER_SUCCESS}\n  case 'REGISTER_REQUEST':\n    return {...store, state: REGISTRATION_IN_PROGRESS}\n  case 'SESSION_ERROR':\n    return {...store, state: INVALID}\n  case 'SET_SESSION_STATE':\n    return {...store, state: action.payload}\n  default:\n    return {...store }\n  }\n}\n\nexport default reducer","import { combineReducers } from 'redux'\n\nimport Bookmarks from './reducers/BookmarksReducer'\nimport Session from './reducers/SessionReducer'\n\nconst scioApp = combineReducers({\n  Bookmarks,\n  Session,\n})\n\nexport default scioApp","import { API_URL } from '../config'\nimport {\n  CREATE_BOOKMARK_REQUEST,\n  CREATE_BOOKMARK_SUCCESS,\n  CREATE_BOOKMARK_ERROR,\n  GET_BOOKMARKS_ERROR,\n  GET_BOOKMARKS_REQUEST,\n  GET_BOOKMARKS_SUCCESS,\n} from './types'\n\nexport const createBookmarkRequest = () => ({\n  type: CREATE_BOOKMARK_REQUEST,\n})\n\nexport const createBookmarkSuccess = () => ({\n  type: CREATE_BOOKMARK_SUCCESS,\n})\n\nexport const createBookmarkError = () => ({\n  type: CREATE_BOOKMARK_ERROR,\n})\n\nexport const getBookmarksRequest = () => ({\n  type: GET_BOOKMARKS_REQUEST,\n})\n\nexport const getBookmarksSuccess = (json) => ({\n  payload: json,\n  type: GET_BOOKMARKS_SUCCESS,\n})\n\nexport const getBookmarksError = () => ({\n  type: GET_BOOKMARKS_ERROR,\n})\n\n/**\n * ASYNC ACTIONS\n */\n\nexport const addBookmark = (bookmark) => {\n  return (dispatch) => {\n    dispatch(createBookmarkRequest())\n    const data = {\n      description: bookmark.description,\n      title: bookmark.title,\n      url: bookmark.url,\n      tags: bookmark.tags || [],\n    }\n    return fetch(`${API_URL}/shortcuts`, {\n      body: JSON.stringify(data),\n      'cache-control': 'no-cache',\n      credentials: 'include',\n      headers: {\n        'content-type': 'application/json',\n      },\n      method: 'POST',\n      mode: 'no-cors',\n    })\n      .then(() => {\n        return dispatch(createBookmarkSuccess())\n      })\n      .then(() => {\n        return dispatch(getBookmarks())\n      })\n      .catch((error) => {\n        console.log(error)\n        dispatch(createBookmarkError(error))\n      })\n  }\n}\n\nexport const getBookmarks = () => {\n  return (dispatch) => {\n    dispatch(getBookmarksRequest())\n    return fetch(`${API_URL}/shortcuts`, {\n      'cache-control': 'no-cache',\n      credentials: 'include',\n      method: 'GET',\n    })\n      .then(response => {\n        return response.json()\n      })\n      .then((json) => {\n        console.log(json)\n        return dispatch(getBookmarksSuccess(json))\n      })\n      .catch((error) => {\n        console.log(error)\n        dispatch(getBookmarksError(error))\n      })\n  }\n}\n","// Session Actions\nexport const INITIALISE_SESSION = 'INITIALISE_SESSION'\nexport const LOGIN_REQUEST = 'LOGIN_REQUEST'\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS'\nexport const LOGOUT_REQUEST = 'LOGOUT_REQUEST'\nexport const LOGOUT_SUCCESS = 'LOGOUT_SUCCESS'\nexport const REGISTER_SUCCESS = 'REGISTER_SUCCESS'\nexport const REGISTER_REQUEST = 'REGISTER_REQUEST'\nexport const SESSION_ERROR = 'SESSION_ERROR'\nexport const SET_SESSION_STATE = 'SET_SESSION_STATE'\n\n// Bookmarks States\nexport const GET_BOOKMARKS_ERROR = 'GET_BOOKMARKS_ERROR'\nexport const GET_BOOKMARKS_REQUEST = 'GET_BOOKMARKS_REQUEST'\nexport const GET_BOOKMARKS_SUCCESS = 'GET_BOOKMARKS_SUCCESS'\nexport const CREATE_BOOKMARK_ERROR = 'CREATE_BOOKMARK_ERROR'\nexport const CREATE_BOOKMARK_REQUEST = 'CREATE_BOOKMARK_REQUEST'\nexport const CREATE_BOOKMARK_SUCCESS = 'CREATE_BOOKMARK_SUCCESS'","import { API_URL } from '../config'\nimport { getBookmarks } from './BookmarksActions'\nimport {\n  INITIALISE_SESSION,\n  LOGIN_REQUEST,\n  LOGIN_SUCCESS,\n  LOGOUT_SUCCESS,\n  REGISTER_SUCCESS,\n  REGISTER_REQUEST,\n  SESSION_ERROR,\n  SET_SESSION_STATE,\n} from './types'\n\nimport {\n  SCIO_LOCALSTORAGE_ID,\n} from '../config'\n\nexport const initialiseSession = (wasRedirected = false) => ({\n  payload: wasRedirected,\n  type: INITIALISE_SESSION,\n})\n\nexport const loginRequest = () => ({\n  type: LOGIN_REQUEST,\n})\n\nexport const loginSuccess = (json) => ({\n  payload: json,\n  type: LOGIN_SUCCESS,\n})\n\nexport const logout = () => ({\n  type: LOGOUT_SUCCESS,\n})\n\nexport const registerRequest = () => ({\n  type: REGISTER_REQUEST,\n})\n\nexport const registerSuccess = (json) => ({\n  payload: json,\n  type: REGISTER_SUCCESS,\n})\n\nexport const sessionError = (error) => ({\n  payload: error,\n  type: SESSION_ERROR,\n})\n\nexport const setSessionState = (newState) => ({\n  payload: newState,\n  type: SET_SESSION_STATE,\n})\n\n\n/**\n * ASYNC ACTIONS\n */\n\nexport const login = (emailAddress, password) => {\n  return (dispatch) => {\n    dispatch(loginRequest())\n    const data = {\n      email: emailAddress,\n      password: password,\n    }\n    return fetch(`${API_URL}/sessions`, {\n      body: JSON.stringify(data),\n      'cache-control': 'no-cache',\n      credentials: 'include',\n      headers: {\n        'content-type': 'application/json',\n      },\n      method: 'POST',\n      mode: 'no-cors',\n    })\n      .then(() => (\n        dispatch(getBookmarks())\n      ))\n      .then(() => {\n        localStorage.setItem(SCIO_LOCALSTORAGE_ID, 'LOGGED_IN')\n        return dispatch(loginSuccess())\n      })\n      .catch((error) => (\n        dispatch(sessionError(error))\n      ))\n  }\n}\n\nexport const register = (emailAddress, username, password) => {\n  return (dispatch) => {\n    dispatch(registerRequest())\n    const data = {\n      email: emailAddress,\n      password: password,\n      username: username,\n    }\n    return fetch(`${API_URL}/users`, {\n      body: JSON.stringify(data),\n      'cache-control': 'no-cache',\n      headers: {\n        'content-type': 'application/json',\n      },\n      method: 'POST',\n      mode: 'no-cors',\n    })\n      .then((response) => (\n        response.json()\n      ))\n      .then((json) => (\n        dispatch(registerSuccess(json))\n      ))\n      .catch((error) => (\n        dispatch(sessionError(error))\n      ))\n  }\n}\n","import React, { Component } from 'react';\nimport { Card, Icon, Tag, Typography } from 'antd';\n\nimport './BookmarkCard.css';\n\nconst { Paragraph } = Typography;\n\nclass BookmarkCard extends Component {\n\n  render() {\n    return (\n      <Card\n        onClick={(e) => this.props.handleClick(e, this.props.data)}\n        className=\"card\"\n        hoverable\n        cover={<div alt=\"example\" className=\"card__cover\" style={this.props.data.screenshot_id ? {backgroundImage: `url(${this.props.data.screenshot_id})`} : {backgroundImage: 'none'}}></div>}\n      >\n        <p className=\"card__title\">{this.props.data.title}</p>\n        <p className=\"card__description\">{this.props.data.description}</p>\n        <Paragraph copyable className=\"card__url\">{this.props.data.url}</Paragraph>\n        { this.props.data.tags.map((tag) =>\n          <Tag color={'magenta'} key={tag}>{tag}</Tag>\n        )}\n      </Card>\n    );\n  }\n}\n\nexport default BookmarkCard;\n","import React, { Component } from 'react';\nimport { Form, Input, Select } from 'antd';\n\nimport './BookmarkForm.css';\n\nclass BookmarkForm extends Component {\n  render() {\n    return (\n      <Form layout=\"vertical\">\n        <Form.Item label=\"URL\">\n          <Input\n            onChange={(e) => this.props.handleChange(e, 'newBookmarkUrl')}\n            value={this.props.bookmark.url || ''}\n          />\n        </Form.Item>\n        <Form.Item label=\"Title\">\n          <Input\n            onChange={(e) => this.props.handleChange(e, 'newBookmarkTitle')}\n            value={this.props.bookmark.title || ''}\n          />\n        </Form.Item>\n        <Form.Item label=\"Description\">\n          <Input\n            onChange={(e) => this.props.handleChange(e, 'newBookmarkDescription')}\n            value={this.props.bookmark.description || ''}\n          />\n        </Form.Item>\n        <Form.Item label=\"Tags\">\n          <Select\n            mode=\"tags\"\n            placeholder=\"Select tags\"\n            value={this.props.selectedItems}\n            onChange={this.props.handleTagChange}\n            style={{ width: '100%' }}\n          >\n            {this.props.filteredOptions.map(item => (\n              <Select.Option key={item} value={item}>\n                {item}\n              </Select.Option>\n            ))}\n          </Select>\n        </Form.Item>\n      </Form>\n    );\n  }\n}\n\nexport default BookmarkForm;\n","import React, { Component } from 'react';\n\nimport { Button, Layout, Modal } from 'antd';\n\nimport './App.css';\nimport BookmarkCard from '../components/BookmarkCard'\nimport BookmarkForm from '../components/BookmarkForm'\n\nconst { Header, Content, Footer } = Layout;\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      confirmLoading: false,\n      modalVisible: false,\n      selectedItems: [],\n      selectedTags: [],\n      newBookmarkDescription: '',\n      newBookmarkTitle: '',\n      newBookmarkUrl: '',\n    }\n    this.handleNewBookmarkChange = this.handleNewBookmarkChange.bind(this)\n  }\n\n  handleBookmarkClick(e, bookmark) {\n    window.open(bookmark.url, '_blank')\n  }\n\n  handleNewBookmarkChange(event, type) {\n    this.setState({\n      [type]: event.target.value,\n    })\n  }\n\n  handleCancel = e => {\n    this.setState({\n      modalVisible: false,\n    })\n  }\n\n  handleTagChange = selectedItems => {\n    this.setState({ selectedItems })\n  }\n\n  handleOk = e => {\n    e.preventDefault()\n    this.setState({ confirmLoading: true })\n    this.props.addBookmark({\n      description: this.state.newBookmarkDescription,\n      title: this.state.newBookmarkTitle,\n      url: this.state.newBookmarkUrl,\n      tags: this.state.selectedItems,\n    })\n    setTimeout(() => {\n      this.setState({\n        confirmLoading: false,\n        modalVisible: false,\n        newBookmarkDescription: '',\n        newBookmarkTitle: '',\n        newBookmarkUrl: '',\n        selectedItems: [],\n      });\n    }, 500);\n  }\n\n  showModal = () => {\n    this.setState({\n      modalVisible: true,\n    })\n  }\n\n  render() {\n    const filteredOptions = this.props.tags.filter(o => !this.state.selectedTags.includes(o))\n\n    return (\n      <Layout className=\"layout\">\n        <Modal\n          confirmLoading={this.state.confirmLoading}\n          onCancel={this.handleCancel}\n          onOk={this.handleOk}\n          title=\"Add new bookmark\"\n          visible={this.state.modalVisible}\n        >\n          <BookmarkForm\n            filteredOptions={filteredOptions}\n            handleTagChange={this.handleTagChange}\n            selectedItems={this.state.selectedItems}\n            handleChange={this.handleNewBookmarkChange}\n            bookmark={{\n              description: this.state.newBookmarkDescription,\n              title: this.state.newBookmarkTitle,\n              url: this.state.newBookmarkUrl,\n              tags: this.state.selectedItems,\n            }}\n          />\n        </Modal>\n        <Header className=\"header\">\n          <Button type=\"primary\" onClick={this.showModal}>New Bookmark</Button>\n          <Button type=\"primary\" onClick={this.props.logout}>Logout</Button>\n        </Header>\n        <Content>\n          { this.props.bookmarks &&\n            <section className=\"cards\">\n              { this.props.bookmarks.map((card) =>\n                <BookmarkCard handleClick={this.handleBookmarkClick} data={card} key={card.id} />\n              )}\n            </section>\n          }\n        </Content>\n        <Footer className=\"footer\">Shortcut.io © 2019 | <a href=\"/imprint\">Imprint</a></Footer>\n      </Layout>\n    );\n  }\n}\n\nexport default App;\n","import React, { Component } from 'react';\nimport { Button, Icon, Input, Form, Typography } from 'antd';\nimport './Login.css';\n\nconst { Text, Title } = Typography;\n\nclass Login extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      email: '',\n      password: '',\n      passwordCheck: '',\n      showRegister: false,\n      username: '',\n    }\n    this.handleChange = this.handleChange.bind(this)\n    this.handleSubmitLogin = this.handleSubmitLogin.bind(this)\n    this.handleSubmitRegister = this.handleSubmitRegister.bind(this)\n  }\n\n  handleChange(event, type) {\n    this.setState({\n      [type]: event.target.value,\n    })\n  }\n\n  handleSubmitLogin(event) {\n    console.log('A name was submitted: ' + this.state.email, this.state.password)\n    event.preventDefault()\n    this.props.login(this.state.email, this.state.password)\n  }\n\n  handleSubmitRegister(event) {\n    console.log('A name was submitted: ' + this.state.email, this.state.username, this.state.password)\n    event.preventDefault()\n    this.props.register(this.state.email, this.state.username, this.state.password)\n  }\n\n  handleToggleRegister = () => {\n    this.setState({\n      showRegister: !this.state.showRegister,\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"login\">\n        <section className=\"login__main\">\n          <Title level={1}>Welcome to Shortcut.io</Title>\n          <Form className=\"login__form\">\n            <Form.Item>\n              <Input\n                className=\"input\"\n                onChange={(e) => this.handleChange(e, 'email')}\n                placeholder=\"Email address\"\n                prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                value={this.state.email || ''}\n              />\n            </Form.Item>\n            { this.state.showRegister &&\n              <Form.Item>\n                <Input\n                  className=\"input\"\n                  onChange={(e) => this.handleChange(e, 'username')}\n                  placeholder=\"User name\"\n                  prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                  value={this.state.username || ''}\n                />\n              </Form.Item>\n            }\n            <Form.Item>\n              <Input.Password\n                className=\"input\"\n                onChange={(e) => this.handleChange(e, 'password')}\n                placeholder=\"Password\"\n                prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                value={this.state.password || ''}\n              />\n            </Form.Item>\n            <Form.Item>\n              { !this.state.showRegister &&\n                <div>\n                  <Button\n                    onClick={this.handleSubmitLogin}\n                    className=\"login__form__button\"\n                    type=\"primary\"\n                    value=\"submit\"\n                  >Sign in</Button>\n                  Or <a onClick={this.handleToggleRegister}>sign up now!</a>\n                </div>\n              }\n              { this.state.showRegister &&\n                <div>\n                  <Button\n                    onClick={this.handleSubmitRegister}\n                    className=\"login__form__button\"\n                    type=\"primary\"\n                    value=\"submit\"\n                  >Sign up</Button>\n                  Or <a onClick={this.handleToggleRegister}>sign in now!</a>\n                </div>\n              }\n            </Form.Item>\n          </Form>\n          <Text className=\"login__main__footer\">Shortcut.io © 2019 | <a href=\"/imprint\">Imprint</a></Text>\n        </section>\n        <section className=\"login__aside\"></section>\n      </div>\n    );\n  }\n}\n\nexport default Login;\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\n\nimport './Home.css'\n\nimport { login, logout, register } from '../actions/SessionActions'\nimport { addBookmark, getBookmarks } from '../actions/BookmarksActions'\nimport { getTags } from '../reducers/BookmarksReducer'\nimport App from './App'\nimport Login from '../components/Login'\n\nclass Home extends Component {\n  componentDidMount = () => {\n    if (this.props.sessionState === 'LOGGED_IN' && !this.props.bookmarks) {\n      this.props.getBookmarks();\n    }\n  }\n\n  handleLogin = (email, password) => {\n    this.props.handleLogin(email, password)\n  }\n\n  handleRegister = (email, username, password) => {\n    this.props.handleRegister(email, username, password)\n  }\n\n  render() {\n    return (\n      <div className=\"home\">\n        { this.props.sessionState !== 'LOGGED_IN' &&\n          <Login\n            login={this.handleLogin}\n            register={this.handleRegister}\n          />\n        }\n        { this.props.sessionState === 'LOGGED_IN' &&\n          <App\n            addBookmark={this.props.addBookmark}\n            newBookmarkState={this.props.newBookmarkState}\n            bookmarks={this.props.bookmarks}\n            logout={this.props.handleLogout}\n            tags={this.props.tags}\n          />\n        }\n      </div>\n    )\n  }\n}\n\nHome.propTypes = {\n  addBookmark: PropTypes.func,\n  newBookmarkState: PropTypes.string,\n  bookmarks: PropTypes.array,\n  getBookmarks: PropTypes.func,\n  handleLogin: PropTypes.func,\n  handleLogout: PropTypes.func,\n  handleRegister: PropTypes.func,\n  sessionState: PropTypes.string,\n  tags: PropTypes.array,\n}\n\nHome.defaultProps = {\n  addBookmark: undefined,\n  newBookmarkState: 'UNKNOWN',\n  bookmarks: null,\n  getBookmarks: undefined,\n  handleLogin: undefined,\n  handleLogout: undefined,\n  handleRegister: undefined,\n  sessionState: 'UNKNOWN',\n  tags: undefined,\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  addBookmark: (bookmark) => {\n    console.log('2', bookmark)\n    dispatch(addBookmark(bookmark))\n  },\n  getBookmarks: () => {\n    dispatch(getBookmarks())\n  },\n  handleLogin: (email, password) => {\n    dispatch(login(email, password))\n  },\n  handleLogout: () => {\n    dispatch(logout())\n  },\n  handleRegister: (email, username, password) => {\n    dispatch(register(email, username, password))\n  },\n})\n\nconst mapStateToProps = (state) => ({\n  bookmarks: state.Bookmarks.bookmarks,\n  newBookmarkState: state.Bookmarks.newBookmarkState,\n  sessionState: state.Session.state,\n  tags: getTags(state),\n})\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Home)\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { compose, createStore, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport { Provider } from 'react-redux'\nimport * as serviceWorker from './serviceWorker'\n\nimport scioApp from './reducer'\nimport './index.css';\nimport Home from './containers/Home'\nimport { initialiseSession } from './actions/SessionActions'\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\nconst store = createStore(\n  scioApp,\n  composeEnhancers(\n    applyMiddleware(thunk)\n  ),\n)\nstore.dispatch(initialiseSession())\n\nReactDOM.render(\n  <Provider store={store}>\n    <Home />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}